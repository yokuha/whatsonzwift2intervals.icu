#!/usr/bin/env python
# Copyright (C) 2021,2022,2023 yokuha
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.

import re
import sys

import requests
from bs4 import BeautifulSoup


def comment(url):
    name = url.rpartition('/')[2]
    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')
    title = soup.title.text
    title = title.replace('\n', '') \
                 .replace('| What\'s on Zwift?', '\n(extracted from "What\'s on Zwift?" by whatsonzwift2intervals.icu)') \
                 .replace('Zwift workouts: ', '')
    return f'{title}\n{url}'

def workout(url):
    name = url.rpartition('/')[2]
    page = requests.get(url)
    soup = BeautifulSoup(page.content, "html.parser")
    results = soup.find(id=name).find_all(class_="textbar")
    zwift = ''
    for element in results:
        zwift += element.text.strip()
        zwift += '\n'
    return zwift[0:-1]


def convert(zwift):
    icu = ""
    multiplier = False

    # expand multipliers into old text-format multiple lines :-o)
    zwift = re.sub('FTP,', 'FTP,\n', zwift)
    # expand multiplied lines
    for line in zwift.split('\n'):
        if re.match('^[1-9]+[xX] .*,\\s*\\Z', line):
            icu += '\n' + line[:3] + '\n'
            icu += '- ' + line[3:] + '\n'
            multiplier = True
        elif re.match('^[1-9]+[xX]', line):
            icu += '\n' + line[:3] + '\n'
            icu += '- ' + line[3:] + '\n'
            multiplier = False
        elif multiplier == True:
            icu += '- ' + line + '\n\n'
            multiplier = False
        else:
            icu += '- ' + line + '\n'

    # replace words and fix grammar
    icu = icu.replace('min', 'm').replace('sec', 's') \
            .replace('from', 'ramp').replace(' to ', '-') \
            .replace('FTP', '').replace(',', '').replace('@', '').replace('  ', ' ') \
            .replace('\n+', '\n') + '\n'
    icu = re.sub('([0-9]+m) ([0-9]+s)', '\\1\\2', icu)

    return icu



if __name__ == '__main__':
    print(f'{comment(sys.argv[1])}\n\n')
    print(convert(workout(sys.argv[1])))



### Local Variables:
### coding: utf-8
### truncate-lines: t
### End:
